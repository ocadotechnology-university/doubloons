-- Doubloons initial schema script


-- Create tables
CREATE TABLE doubloons.categories (
    category_id integer NOT NULL,
    category_name text NOT NULL,
    category_description text NOT NULL
);

CREATE TABLE doubloons.comments (
    month_and_year character varying(7) NOT NULL,
    given_to text NOT NULL,
    given_by text NOT NULL,
    comment text NOT NULL
);

CREATE TABLE doubloons.doubloons (
    doubloon_id bigint NOT NULL,
    category_id integer NOT NULL,
    given_to text NOT NULL,
    given_by text NOT NULL,
    amount integer NOT NULL,
    month_and_year character varying(7) NOT NULL
);

ALTER TABLE doubloons.doubloons ALTER COLUMN doubloon_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME doubloons.doubloons_doubloon_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE doubloons.team_leaders (
    leader_id text NOT NULL,
    team_id text NOT NULL
);

CREATE TABLE doubloons.teams (
    team_id text NOT NULL,
    team_name text NOT NULL,
    team_description text
);

CREATE TABLE doubloons.users (
    email text NOT NULL,
    team_id text,
    first_name text NOT NULL,
    last_name text NOT NULL,
    password text NOT NULL,
    avatar text
);

-- Initialize categories

INSERT INTO doubloons.categories (category_id, category_name, category_description) VALUES (5, 'craftsmanship', 'to-update');
INSERT INTO doubloons.categories (category_id, category_name, category_description) VALUES (4, 'learn fast', 'to-update');
INSERT INTO doubloons.categories (category_id, category_name, category_description) VALUES (3, 'autonomy', 'to-update');
INSERT INTO doubloons.categories (category_id, category_name, category_description) VALUES (2, 'trust', 'to-update');
INSERT INTO doubloons.categories (category_id, category_name, category_description) VALUES (1, 'collaboration', 'to-update');

-- Make the default user the owner of the tables

ALTER TABLE doubloons.categories OWNER TO doubloons;
ALTER TABLE doubloons.comments OWNER TO doubloons;
ALTER TABLE doubloons.doubloons OWNER TO doubloons;
ALTER TABLE doubloons.team_leaders OWNER TO doubloons;
ALTER TABLE doubloons.teams OWNER TO doubloons;
ALTER TABLE doubloons.users OWNER TO doubloons;

-- Add constraints

ALTER TABLE ONLY doubloons.doubloons ADD CONSTRAINT doubloons_pkey PRIMARY KEY (doubloon_id);

ALTER TABLE ONLY doubloons.users ADD CONSTRAINT users_pkey PRIMARY KEY (email);

ALTER TABLE ONLY doubloons.categories ADD CONSTRAINT categories_pkey PRIMARY KEY (category_id);

ALTER TABLE ONLY doubloons.comments ADD CONSTRAINT comments_pkey PRIMARY KEY (month_and_year, given_to, given_by);

ALTER TABLE ONLY doubloons.teams
    ADD CONSTRAINT teams_pkey PRIMARY KEY (team_id);

ALTER TABLE ONLY doubloons.comments
    ADD CONSTRAINT comments_given_by_fkey FOREIGN KEY (given_by) REFERENCES doubloons.users(email);

ALTER TABLE ONLY doubloons.comments
    ADD CONSTRAINT comments_given_to_fkey FOREIGN KEY (given_to) REFERENCES doubloons.users(email);

ALTER TABLE ONLY doubloons.doubloons
    ADD CONSTRAINT doubloons_category_fkey FOREIGN KEY (category_id) REFERENCES doubloons.categories(category_id) NOT VALID;

ALTER TABLE ONLY doubloons.doubloons
    ADD CONSTRAINT doubloons_given_by_fkey FOREIGN KEY (given_by) REFERENCES doubloons.users(email) NOT VALID;

ALTER TABLE ONLY doubloons.doubloons
    ADD CONSTRAINT doubloons_given_to_fkey FOREIGN KEY (given_to) REFERENCES doubloons.users(email) NOT VALID;

ALTER TABLE ONLY doubloons.team_leaders
    ADD CONSTRAINT team_leaders_leader_fkey FOREIGN KEY (leader_id) REFERENCES doubloons.users(email);

ALTER TABLE ONLY doubloons.team_leaders
    ADD CONSTRAINT team_leaders_team_fkey FOREIGN KEY (team_id) REFERENCES doubloons.teams(team_id) NOT VALID;

ALTER TABLE ONLY doubloons.users
    ADD CONSTRAINT users_team_fkey FOREIGN KEY (team_id) REFERENCES doubloons.teams(team_id) NOT VALID;


-- Add stallions team

INSERT INTO doubloons.teams (team_id, team_name, team_description) VALUES ('1', 'Stallions', 'OSP Now Business Processes');
