<configuration>
    <statusListener class="ch.qos.logback.core.status.OnConsoleStatusListener"/>

    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <if condition='isDefined("AWS_CLOUD_ENVIRONMENT")'>
            <then>
                <encoder class="net.logstash.logback.encoder.LogstashEncoder">
                    <customFields>{"hostname":"${HOSTNAME}","appName":"doubloons","appId":"doubloons","group":"onw"}</customFields>
                </encoder>
            </then>
            <else>
                <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
                    <level>INFO</level>
                </filter>
                <encoder>
                    <pattern>%date{YYYY-MM-dd HH:mm:ss.SSS} [%level] %logger{36} [%thread] [%mdc{X-B3-TraceId:--}] %message%n%xException</pattern>
                </encoder>
            </else>
        </if>
    </appender>

    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <if condition='isDefined("AWS_CLOUD_ENVIRONMENT")'>
            <then>
                <file>/var/log/doubloons.log</file>
                <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                    <fileNamePattern>/var/log/doubloons.log.%d{yyyy-MM-dd_HH}.gz</fileNamePattern>
                    <maxHistory>48</maxHistory> <!-- 2 days-->
                </rollingPolicy>
                <encoder>
                    <pattern>%date{YYYY-MM-dd HH:mm:ss.SSS} [%level] %logger{36} [%thread] [%mdc{X-B3-TraceId:--}] %message%n%xException</pattern>
                </encoder>
            </then>
            <else>
                <file>/tmp/logs/doubloons.log</file>
                <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                    <fileNamePattern>/tmp/logs/doubloons.log.%d{yyyy-MM-dd_HH}.gz</fileNamePattern>
                    <maxHistory>48</maxHistory> <!-- 2 days-->
                </rollingPolicy>
                <encoder>
                    <pattern>%date{YYYY-MM-dd HH:mm:ss.SSS} [%level] %logger{36} [%thread] [%mdc{X-B3-TraceId:--}] %message%n%xException</pattern>
                </encoder>
            </else>
        </if>
    </appender>

    <appender name="ASYNC_CONSOLE" class="ch.qos.logback.classic.AsyncAppender">
        <param name="queueSize" value="256"/>
        <param name="neverBlock" value="true"/>
        <appender-ref ref="CONSOLE"/>
    </appender>

    <appender name="ASYNC_FILE" class="ch.qos.logback.classic.AsyncAppender">
        <param name="queueSize" value="256"/>
        <param name="neverBlock" value="true"/>
        <appender-ref ref="FILE"/>
    </appender>

    <logger name="io.netty.util.internal.logging" level="DEBUG">
        <appender-ref ref="ASYNC_CONSOLE"/>
    </logger>
    <logger name="com.ocado.ospnow.wms" level="DEBUG"/>

    <root level="DEBUG">
        <appender-ref ref="ASYNC_CONSOLE"/>
        <appender-ref ref="ASYNC_FILE"/>
    </root>

    <shutdownHook class="ch.qos.logback.core.hook.DelayingShutdownHook"/>

</configuration>
